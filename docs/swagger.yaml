basePath: /
definitions:
  models.Dish:
    properties:
      description:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
      price:
        type: number
      restaurantID:
        type: string
    type: object
  models.Rating:
    properties:
      dishID:
        type: string
      id:
        type: string
      review:
        maxLength: 500
        type: string
      score:
        maximum: 5
        minimum: 1
        type: integer
      userID:
        type: string
    required:
    - dishID
    - score
    - userID
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a restaurant management system.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Restaurant API
  version: "1.0"
paths:
  /dishes:
    get:
      description: Retrieve a list of all available dishes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Dish'
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: List all dishes
      tags:
      - Dishes
    post:
      consumes:
      - application/json
      description: Submit a new dish that will be processed
      parameters:
      - description: Dish data
        in: body
        name: dish
        required: true
        schema:
          $ref: '#/definitions/models.Dish'
      produces:
      - application/json
      responses:
        "201":
          description: Dish submitted successfully, it will be processed shortly.
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new dish
      tags:
      - Dishes
    put:
      consumes:
      - application/json
      description: Update the details of an existing dish
      parameters:
      - description: Dish data
        in: body
        name: dish
        required: true
        schema:
          $ref: '#/definitions/models.Dish'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Dish'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a dish
      tags:
      - Dishes
  /dishes/{dish_id}/ratings:
    get:
      description: Retrieve all ratings for a specific dish by its UUID
      parameters:
      - description: Dish ID
        in: path
        name: dish_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Rating'
            type: array
        "400":
          description: Invalid dish ID format
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get ratings for a dish
      tags:
      - Ratings
    post:
      consumes:
      - application/json
      description: Submit a rating for a specific dish
      parameters:
      - description: Dish ID
        in: path
        name: dish_id
        required: true
        type: string
      - description: Rating data
        in: body
        name: rating
        required: true
        schema:
          $ref: '#/definitions/models.Rating'
      produces:
      - application/json
      responses:
        "201":
          description: Rating submitted successfully, it will be processed shortly.
          schema:
            type: string
        "400":
          description: Invalid input or dish ID
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create a new rating for a dish
      tags:
      - Ratings
  /dishes/{id}:
    delete:
      description: Remove a specific dish by its UUID
      parameters:
      - description: Dish ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No content
          schema:
            type: string
        "400":
          description: Invalid UUID format
          schema:
            type: string
        "404":
          description: Dish not found
          schema:
            type: string
      summary: Delete a dish by ID
      tags:
      - Dishes
    get:
      description: Retrieve the details of a specific dish by its UUID
      parameters:
      - description: Dish ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Dish'
        "400":
          description: Invalid UUID format
          schema:
            type: string
        "404":
          description: Dish not found
          schema:
            type: string
      summary: Get a dish by ID
      tags:
      - Dishes
  /dishes/search:
    get:
      description: Search for dishes by name or other criteria
      parameters:
      - description: Search query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Dish'
            type: array
        "400":
          description: Query parameter is required
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Search for dishes
      tags:
      - Dishes
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
